{"index.js":"function addTogether() {\n  let args = [...arguments];\n  // console.log(args);\n  // const reducer = (accumulator, currentValue) => accumulator + currentValue;\n  let summed = 0;\n\n  // if (args.length > 1) {\n    // for (var i = 0; i < args.length; i++) {\n    //   if (typeof args[i] != \"number\") {\n    //     console.log(\"NaN!!\");\n    //     return undefined;\n    //   }\n    // }\n  // }\n  if (args.length == 2) {\n    let firstArg = checkNum(arguments[0]);\n    let secondArg = checkNum(arguments[1]);\n    console.log(\"First: \" + firstArg);\n    console.log(\"Second: \" + secondArg);\n\n    if (firstArg !== undefined && secondArg !== undefined) {\n      summed = firstArg + secondArg;\n      if (summed == \"NaN\") {\n        return undefined;\n      } else {\n        console.log(\"Sum: \" + summed)\n        return summed;\n      }\n    } \n    } else {\n  // } else if (args.length == 1) {\n    // need to make a function here to handle if only one arg is passed at a time\n    let args1 = arguments[0];\n    // let args1Type = checkNum(arguments[0]);\n    // console.log(\"Type: \" + args1Type);\n    if (checkNum(args1) === undefined) {\n      console.log('Oh no')\n      return undefined;\n    } else {\n      return function(args2) {\n        if (args1 === undefined || checkNum(args2) === undefined) {\n          console.log(\"undefined\");\n          return undefined;\n        } else {\n          console.log(\"Math: \" + args1 + args2);\n          return args1 + args2;\n        }\n      }\n    }\n  }\n}\n\nfunction checkNum(theNumber) {\n  if (typeof theNumber !== \"number\") {\n    return undefined;\n  } else {\n    return theNumber;\n  }\n}\n\n\n\n// addTogether(2,3);\naddTogether(2, \"3\");\n// addTogether(2)(3);\n// addTogether(\"http://bit.ly/IqT6zt\");\n\n//const reducer = (accumulator, currentValue) => accumulator + currentValue;\n// console.log(array1.reduce(reducer));"}